/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poon.gophish;

import java.awt.Component;
import java.awt.event.ActionEvent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author King
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    public home() {
        initComponents();
    }

    private String instanceH = "";
    private String instanceP = "";
    private String hashPath = "";
    private String sshPath = "";
    private String mode = "";
    private String identity = "";
    private String guestIp = "";
    private boolean verbose = false;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buttonUploadHash = new javax.swing.JButton();
        p32 = new javax.swing.JCheckBox();
        p38 = new javax.swing.JCheckBox();
        p316 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputHashMode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        wordlist_short = new javax.swing.JCheckBox();
        wordlist_medium = new javax.swing.JCheckBox();
        wordlist_long = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        inputGuestIP = new javax.swing.JTextField();
        inputIdentity = new javax.swing.JTextField();
        buttonUploadSSHKey = new javax.swing.JButton();
        labelHashLocation = new javax.swing.JLabel();
        labelUploadSSHKey = new javax.swing.JLabel();
        buttonGenerate = new javax.swing.JButton();
        textOutput = new javax.swing.JTextField();
        radioDestroy = new javax.swing.JRadioButton();
        radioCreate = new javax.swing.JRadioButton();
        radioVerbose = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Lazy cat");

        buttonUploadHash.setText("Upload hash files");
        buttonUploadHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUploadHashActionPerformed(evt);
            }
        });

        p32.setBackground(new java.awt.Color(255, 255, 255));
        p32.setText("p3.2xlarge");
        p32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p32ActionPerformed(evt);
            }
        });

        p38.setBackground(new java.awt.Color(255, 255, 255));
        p38.setText("p3.8xlarge");
        p38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p38ActionPerformed(evt);
            }
        });

        p316.setBackground(new java.awt.Color(255, 255, 255));
        p316.setText("p3.16xlarge");
        p316.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p316ActionPerformed(evt);
            }
        });

        jLabel2.setText("Size of instance to use*");

        jLabel3.setText("Hashtype cracking mode*");

        inputHashMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputHashModeActionPerformed(evt);
            }
        });

        jLabel4.setText("Identity*");

        jLabel5.setText("SSHKey");

        jLabel6.setText("Length of hashcrack to run*");

        wordlist_short.setBackground(new java.awt.Color(255, 255, 255));
        wordlist_short.setText("rockyou.txt");
        wordlist_short.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordlist_shortActionPerformed(evt);
            }
        });

        wordlist_medium.setBackground(new java.awt.Color(255, 255, 255));
        wordlist_medium.setText("rockyou.txt + fav_wordlist");
        wordlist_medium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordlist_mediumActionPerformed(evt);
            }
        });

        wordlist_long.setBackground(new java.awt.Color(255, 255, 255));
        wordlist_long.setText("rockyou.txt + fav_wordlist + crackstation.txt");
        wordlist_long.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordlist_longActionPerformed(evt);
            }
        });

        jLabel7.setText("Guest-ip");

        buttonUploadSSHKey.setText("Upload SSH Key");
        buttonUploadSSHKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUploadSSHKeyActionPerformed(evt);
            }
        });

        labelHashLocation.setText("<no file uploaded>");

        labelUploadSSHKey.setText("<no ssh key uploaded>");

        buttonGenerate.setText("Generate line");
        buttonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerateActionPerformed(evt);
            }
        });

        radioDestroy.setBackground(new java.awt.Color(255, 255, 255));
        radioDestroy.setText("Destroy Instance");
        radioDestroy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDestroyActionPerformed(evt);
            }
        });

        radioCreate.setBackground(new java.awt.Color(255, 255, 255));
        radioCreate.setText("Create Instance");
        radioCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCreateActionPerformed(evt);
            }
        });

        radioVerbose.setBackground(new java.awt.Color(255, 255, 255));
        radioVerbose.setText("Verbose mode");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textOutput)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(p316, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(p38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(p32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(buttonUploadHash, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(inputHashMode, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(87, 87, 87)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(wordlist_long, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                                    .addComponent(wordlist_medium, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(wordlist_short, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(64, 64, 64)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(inputGuestIP, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(45, 45, 45)
                                                    .addComponent(inputIdentity, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(labelHashLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(buttonUploadSSHKey, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(labelUploadSSHKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(buttonGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(radioVerbose, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioCreate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioDestroy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUploadHash)
                    .addComponent(labelHashLocation))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p32)
                    .addComponent(wordlist_short))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p38)
                    .addComponent(wordlist_medium))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p316)
                    .addComponent(wordlist_long))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputHashMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputGuestIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputIdentity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUploadSSHKey)
                    .addComponent(labelUploadSSHKey))
                .addGap(18, 18, 18)
                .addComponent(radioDestroy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioCreate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioVerbose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(buttonGenerate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonUploadHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUploadHashActionPerformed
        JFileChooser fc = new JFileChooser();
        String path = null;
        int returnVal = fc.showOpenDialog(jPanel1);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            path =  fc.getSelectedFile().toString();
        }
        fc.setVisible(true);
        labelHashLocation.setText(path);
        hashPath = path;
    }//GEN-LAST:event_buttonUploadHashActionPerformed

    private void buttonUploadSSHKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUploadSSHKeyActionPerformed
        JFileChooser fc = new JFileChooser();
        String path = null;
        int returnVal = fc.showOpenDialog(jPanel1);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            path =  fc.getSelectedFile().toString();
        }
        fc.setVisible(true);
        labelUploadSSHKey.setText(path);
        sshPath = path;
    }//GEN-LAST:event_buttonUploadSSHKeyActionPerformed

    private void p32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p32ActionPerformed
        selectInstanceP(evt);
    }//GEN-LAST:event_p32ActionPerformed

    private void p38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p38ActionPerformed
        selectInstanceP(evt);
    }//GEN-LAST:event_p38ActionPerformed

    private void p316ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p316ActionPerformed
        selectInstanceP(evt);
    }//GEN-LAST:event_p316ActionPerformed

    private void wordlist_shortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordlist_shortActionPerformed
        selectInstanceH(evt);
    }//GEN-LAST:event_wordlist_shortActionPerformed

    private void wordlist_mediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordlist_mediumActionPerformed
        selectInstanceH(evt);
    }//GEN-LAST:event_wordlist_mediumActionPerformed

    private void wordlist_longActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordlist_longActionPerformed
        selectInstanceH(evt);
    }//GEN-LAST:event_wordlist_longActionPerformed

    private void radioDestroyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDestroyActionPerformed
        if(radioDestroy.isSelected()) {
            wordlist_medium.setEnabled(false);
            wordlist_long.setEnabled(false);
            wordlist_short.setEnabled(false);
            p38.setEnabled(false);
            p32.setEnabled(false);
            p316.setEnabled(false);
            inputHashMode.setEnabled(false);
            inputGuestIP.setEnabled(false);
            inputIdentity.setEnabled(false);
            radioCreate.setSelected(false);
        } else {
            wordlist_medium.setEnabled(true);
            wordlist_long.setEnabled(true);
            wordlist_short.setEnabled(true);
            p38.setEnabled(true);
            p32.setEnabled(true);
            p316.setEnabled(true);
            inputHashMode.setEnabled(true);
            inputGuestIP.setEnabled(true);
            inputIdentity.setEnabled(true);
        }
    }//GEN-LAST:event_radioDestroyActionPerformed

    private void radioCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCreateActionPerformed
        if(radioCreate.isSelected()) {
            wordlist_medium.setEnabled(true);
            wordlist_long.setEnabled(true);
            wordlist_short.setEnabled(true);
            p38.setEnabled(true);
            p32.setEnabled(true);
            p316.setEnabled(true);
            inputHashMode.setEnabled(true);
            inputGuestIP.setEnabled(true);
            inputIdentity.setEnabled(true);
            radioDestroy.setSelected(false);
        } else {
            wordlist_medium.setEnabled(false);
            wordlist_long.setEnabled(false);
            wordlist_short.setEnabled(false);
            p38.setEnabled(false);
            p32.setEnabled(false);
            p316.setEnabled(false);
            inputHashMode.setEnabled(false);
            inputGuestIP.setEnabled(false);
            inputIdentity.setEnabled(false);
        }
    }//GEN-LAST:event_radioCreateActionPerformed

    private void buttonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerateActionPerformed
        if (radioCreate.isSelected()) {
            if(radioVerbose.isSelected()) {
                verbose = true;
            } else {
                verbose = false;
            }
            mode = inputHashMode.getText();
            identity = inputIdentity.getText();
            guestIp = inputGuestIP.getText();
            if(identity != "" && mode != "" && instanceP != "" && hashPath != "" && sshPath != "" && instanceH != "") {
                String command = "./cloudcat.py -t " + instanceP + " -f " + hashPath + " -m " + mode + " -i " + identity + " -k " + sshPath + " -l " + instanceH;
                if (verbose) {
                    command = command + " -v";
                }
                textOutput.setText(command);
            } else {
                Component frame = null;
                JOptionPane.showMessageDialog(frame, "Missing Parameters");
            }
        }
        if (radioDestroy.isSelected()) {
            String command = "./cloudcat.py";
            if (radioVerbose.isSelected()) {
                command = command + " -v";
            }
            textOutput.setText(command);
        }
    }//GEN-LAST:event_buttonGenerateActionPerformed

    private void inputHashModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputHashModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputHashModeActionPerformed
    
    public void selectInstanceH(ActionEvent evt) {
        switch(evt.getActionCommand()) {
            case "rockyou.txt":
                wordlist_medium.setSelected(false);
                wordlist_long.setSelected(false);
                instanceH = "short";
                break;
            case "rockyou.txt + fav_wordlist":
                wordlist_long.setSelected(false);
                wordlist_short.setSelected(false);
                instanceH = "medium";
                break;
            case "rockyou.txt + fav_wordlist + crackstation.txt":
                wordlist_short.setSelected(false);
                wordlist_medium.setSelected(false);
                instanceH = "long";
                break;
        }
    }
    
    public void selectInstanceP(ActionEvent evt) {
        switch(evt.getActionCommand()) {
            case "p3.2xlarge":
                p38.setSelected(false);
                p316.setSelected(false);
                instanceP = "p3.2xlarge";
                break;
            case "p3.8xlarge":
                p316.setSelected(false);
                p32.setSelected(false);
                instanceP = "p3.8xlarge";
                break;
            case "p3.16xlarge":
                p38.setSelected(false);
                p32.setSelected(false);
                instanceP = "p3.16xlarge";
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonGenerate;
    private javax.swing.JButton buttonUploadHash;
    private javax.swing.JButton buttonUploadSSHKey;
    private javax.swing.JTextField inputGuestIP;
    private javax.swing.JTextField inputHashMode;
    private javax.swing.JTextField inputIdentity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelHashLocation;
    private javax.swing.JLabel labelUploadSSHKey;
    private javax.swing.JCheckBox p316;
    private javax.swing.JCheckBox p32;
    private javax.swing.JCheckBox p38;
    private javax.swing.JRadioButton radioCreate;
    private javax.swing.JRadioButton radioDestroy;
    private javax.swing.JRadioButton radioVerbose;
    private javax.swing.JTextField textOutput;
    private javax.swing.JCheckBox wordlist_long;
    private javax.swing.JCheckBox wordlist_medium;
    private javax.swing.JCheckBox wordlist_short;
    // End of variables declaration//GEN-END:variables

    private String getInstanceH() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getInstanceL() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getCrackMode() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getGuestIP() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getIdentity() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getHashFile() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private String getSSHKey() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
